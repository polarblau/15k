{"version":3,"sources":["components/SearchForm/index.js","components/TravelModeSelect/index.js","components/Map/index.js","components/Marker/index.js","components/Circle/index.js","components/Isoline/index.js","lib/countyHelpers.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","props","useState","error","setError","warning","setWarning","info","setInfo","address","setAddress","handleSubmit","evt","preventDefault","platform","getSearchService","geocode","q","data","result","items","coords","position","title","county","postalCode","onResult","args","console","useEffect","location","countyStatus","Math","round","incidenceValue","updatedAt","Paper","elevation","className","onSubmit","TextField","fullWidth","label","variant","value","onChange","target","onBlur","Alert","severity","action","IconButton","aria-label","color","size","onClick","fontSize","TravelModeSelect","travelMode","setTravelMode","ToggleButtonGroup","exclusive","ToggleButton","Map","mapRef","useRef","map","setMap","setPlatform","useLayoutEffect","current","hPlatform","H","service","Platform","apiKey","defaultLayers","createDefaultLayers","hMap","vector","normal","pixelRatio","window","devicePixelRatio","center","zoom","mapevents","Behavior","MapEvents","dispose","onResize","getViewPort","resize","onTap","screenToGeo","currentPointer","viewportX","viewportY","addEventListener","removeEventListener","setCenter","zoomBounds","getViewModel","setLookAtData","bounds","setZoom","ref","children","React","Children","c","cloneElement","renderChildren","Marker","marker","addObject","removeObject","Circle","setColor","style","fillColor","strokeColor","lineDash","lineWidth","circle","radius","onBoundsChange","getBoundingBox","Isoline","polyline","setPolyline","getRoutingService","params","start","lat","lng","range","rangetype","rangeType","mode","fetch","obj","str","key","encodeURIComponent","objToParams","apikey","a","then","response","json","latLngArray","isoline","component","shape","e","split","flat","geo","LineString","fromLatLngArray","polygon","Polygon","CountyHelper","options","hereAPIKey","Promise","resolve","reject","reverseGeocode","at","join","entries","features","count","attributes","GEN","cases7_per_100k","last_update","Object","fromEntries","prepCountyData","HERE_API_KEY","DEFAULT_COORDS","App","setLocation","setZoomBounds","CountyHelpers","getCounty","getCountyInfo","navigator","geolocation","getCurrentPosition","latitude","longitude","coordsSet","catch","countyInfo","is","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OA0HeA,EArHI,SAACC,GAAW,IAAD,EACFC,mBAAS,MADP,mBACrBC,EADqB,KACdC,EADc,OAEEF,mBAAS,MAFX,mBAErBG,EAFqB,KAEZC,EAFY,OAGJJ,mBAAS,MAHL,mBAGrBK,EAHqB,KAGfC,EAHe,OAIEN,mBAAS,IAJX,mBAIrBO,EAJqB,KAIZC,EAJY,KAMtBC,EAAe,SAACC,GACpBA,EAAIC,iBACYZ,EAAMa,SAASC,mBACvBC,QAAQ,CAAEC,EAAGR,IACnB,SAACS,GACC,IAAMC,EAASD,EAAKE,MAAM,GAC1B,GAAKD,EAAL,CAIA,IAAME,EAASF,EAAOG,SAChBb,EAAUU,EAAOI,MAPf,EAQuBJ,EAAOV,QAA9Be,EARA,EAQAA,OAAQC,EARR,EAQQA,WAChBxB,EAAMyB,SAAS,CAAEL,SAAQG,SAAQC,eACjCf,EAAWD,QAPTL,EAAS,oCASb,WAAc,IAAD,uBAATuB,EAAS,yBAATA,EAAS,gBACXC,QAAQzB,MAAM,mBAAoBwB,GAClCvB,EAAS,+CA+Bf,OArBAyB,qBAAU,WACRvB,EAAW,MACXE,EAAQ,MAC2B,WAA/BP,EAAM6B,SAASC,aACjBzB,EAAW,4BAAD,OACSL,EAAM6B,SAASN,OADxB,wGAGNQ,KAAKC,MAAMhC,EAAM6B,SAASI,gBAHpB,4IAKyBjC,EAAM6B,SAASK,UALxC,cAODlC,EAAM6B,SAASI,gBACxB1B,EAAQ,4BAAD,OACYP,EAAM6B,SAASN,OAD3B,qDAEHQ,KAAKC,MAAMhC,EAAM6B,SAASI,gBAFvB,6CAG4B,YAA/BjC,EAAM6B,SAASC,aAA6B,uCAAyC,IAHlF,qCAIY9B,EAAM6B,SAASK,UAJ3B,gBAOR,CAAClC,EAAM6B,WAGR,eAACM,EAAA,EAAD,CAAOC,UAAW,EAAGC,UAAU,OAA/B,UACE,sBAAMC,SAAU5B,EAAhB,SACE,cAAC6B,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,qBACNC,QAAQ,WACRC,MAAOnC,EACPoC,SAlCmB,SAACjC,GAC1BR,GAAS,GACTM,EAAWE,EAAIkC,OAAOF,QAiChBG,OAAQpC,EACRR,QAASA,MAGXE,GAAW,cAAC2C,EAAA,EAAD,CAAOC,SAAS,UACTX,UAAU,WACVY,OACE,cAACC,EAAA,EAAD,CACEC,aAAW,QACXC,MAAM,UACNC,KAAK,QACLC,QAAS,kBAAMjD,EAAW,OAJ5B,SAME,cAAC,IAAD,CAAWkD,SAAS,cAT/B,SAaQnD,IAElBF,IAAUI,GAAS,cAACyC,EAAA,EAAD,CAAOC,SAAS,QACTX,UAAU,WACVY,OACE,cAACC,EAAA,EAAD,CACEC,aAAW,QACXC,MAAM,UACNC,KAAK,QACLC,QAAS,kBAAMnD,EAAS,OAJ1B,SAME,cAAC,IAAD,CAAWoD,SAAS,cAT/B,SAaQrD,IAE3BI,IAASF,GAAY,cAAC2C,EAAA,EAAD,CAAOC,SAAS,OACTX,UAAU,WACVY,OACE,cAACC,EAAA,EAAD,CACEC,aAAW,QACXC,MAAM,UACNC,KAAK,QACLC,QAAS,kBAAM/C,EAAQ,OAJzB,SAME,cAAC,IAAD,CAAWgD,SAAS,cAT/B,SAaQjD,Q,oDCpFvBkD,EA1BU,SAACxD,GAAW,IAAD,EACEC,mBAAS,OADX,mBAC3BwD,EAD2B,KACfC,EADe,KAQlC,OACE,cAACvB,EAAA,EAAD,CAAOC,UAAW,EAAGC,UAAU,qBAA/B,SACE,eAACsB,EAAA,EAAD,CACEhB,MAAOc,EACPG,WAAS,EACThB,SAVe,SAACjC,EAAKgC,GACzBe,EAAcf,GACd3C,EAAM4C,SAASD,IAKb,UAKE,cAACkB,EAAA,EAAD,CAAclB,MAAM,MAApB,SACE,cAAC,IAAD,MAEF,cAACkB,EAAA,EAAD,CAAclB,MAAM,aAApB,SACE,cAAC,IAAD,Y,QCkEKmB,EAxFH,SAAC9D,GACX,IAAM+D,EAASC,iBAAO,MADD,EAEC/D,mBAAS,MAFV,mBAEdgE,EAFc,KAETC,EAFS,OAGWjE,mBAAS,MAHpB,mBAGdY,EAHc,KAGJsD,EAHI,KAKrBC,2BAAgB,WACd,GAAKL,EAAOM,QAAZ,CAEA,IAAMC,EAAY,IAAIC,IAAEC,QAAQC,SAAS,CACvC,OAAUzE,EAAM0E,SAGlBP,EAAYG,GAEZ,IAAMK,EAAgBL,EAAUM,sBAE1BC,EAAO,IAAIN,IAAET,IACjBC,EAAOM,QACPM,EAAcG,OAAOC,OAAOd,IAC5B,CACEe,WAAYC,OAAOC,iBACnBC,OAAQnF,EAAMmF,OACdC,KAAMpF,EAAMoF,OAIC,IAAIb,IAAEc,UAAUC,SAAS,IAAIf,IAAEc,UAAUE,UAAUV,IAKpE,OAFAX,EAAOW,GAEA,kBAAMA,EAAKW,cACjB,CAACzB,IAEJnC,qBAAU,WACR,GAAKqC,EAAL,CAEA,IAAMwB,EAAW,SAAC9E,GAChBsD,EAAIyB,cAAcC,UAGdC,EAAQ,SAACjF,GACb,IAAMS,EAAS6C,EAAI4B,YACjBlF,EAAImF,eAAeC,UACnBpF,EAAImF,eAAeE,WAErBhG,EAAMsD,QAAQlC,IAMhB,OAHA6D,OAAOgB,iBAAiB,SAAUR,GAClCxB,EAAIgC,iBAAiB,MAAOL,GAErB,WACLX,OAAOiB,oBAAoB,SAAUT,GACrCxB,EAAIiC,oBAAoB,MAAON,OAEhC,CAAC3B,IAEJrC,qBAAU,WACHqC,IACLA,EAAIkC,UAAUnG,EAAMmF,QAChBnF,EAAMoG,WACRnC,EAAIoC,eAAeC,cAAc,CAAEC,OAAQvG,EAAMoG,aAEjDnC,EAAIuC,QAAQxG,EAAMoF,SAEnB,CAACpF,EAAMmF,OAAQnF,EAAMoF,KAAMpF,EAAMoG,aAapC,OACE,qCACE,qBAAK/D,UAAU,MAAMoE,IAAK1C,IACxBE,EAbiB,WAAO,IACpByC,EAAa1G,EAAb0G,SACR,GAAKA,EAEL,OAAOC,IAAMC,SAAS3C,IAAIyC,GAAU,SAAAG,GAClC,GAAKA,EACL,OAAOF,IAAMG,aAAaD,EAAG,CAAE5C,MAAKpD,gBAO5BkG,GAAmB,oBCrElBC,EAbA,SAAChH,GAUd,OARA4B,qBAAU,WACR,IAAMqF,EAAS,IAAI1C,IAAEN,IAAI+C,OAAOhH,EAAM6B,SAAST,QAG/C,OAFApB,EAAMiE,IAAIiD,UAAUD,GAEb,kBAAMjH,EAAMiE,IAAIkD,aAAaF,MAEnC,CAACjH,EAAM6B,SAAST,SAEZ,MCoBMgG,EA9BA,SAACpH,GAAW,IAAD,EACEC,mBAAS,WADX,mBACjBmD,EADiB,KACViE,EADU,KA2BxB,OApBAzF,qBAAU,WACRyF,EAAwC,WAA/BrH,EAAM6B,SAASC,aAA4B,UAAY,aAC/D,CAAC9B,EAAM6B,SAASC,eAEnBF,qBAAU,WACR,IAAM0F,EAAQ,CACZC,UAAW,yBACXC,YAAapE,EACbqE,SAAU,CAAC,EAAG,GACdC,UAAW,GAGPC,EAAS,IAAIpD,IAAEN,IAAImD,OAAOpH,EAAM6B,SAAST,OAAQpB,EAAM4H,OAAQ,CAAEN,UAIvE,OAHAtH,EAAMiE,IAAIiD,UAAUS,GACpB3H,EAAM6H,eAAeF,EAAOG,kBAErB,kBAAM9H,EAAMiE,IAAIkD,aAAaQ,MAEnC,CAAC3H,EAAM6B,SAAUuB,IAEb,MCsBM2E,EAtCC,SAAC/H,GAAW,IAAD,EACOC,mBAAS,MADhB,mBAClB+H,EADkB,KACRC,EADQ,KAGnBX,EAAQ,CACZI,UAAW,GA+Bb,OA5BA9F,qBAAU,WACO5B,EAAMa,SAASqH,kBAAkB,KAAM,GAAtD,IACMC,EAAS,CACbC,MAAM,OAAD,OAASpI,EAAM6B,SAAST,OAAOiH,IAA/B,YAAsCrI,EAAM6B,SAAST,OAAOkH,KACjEC,MAAOvI,EAAMuI,MACbC,UAAWxI,EAAMyI,WAAa,WAC9BC,KAAK,YAAD,OAAc1I,EAAMyD,aAG1BkF,MA3Ba,0EAEG,SAACC,GACnB,IAAIC,EAAM,GACV,IAAK,IAAIC,KAAOF,EACH,IAAPC,IAAWA,GAAO,KACtBA,GAAOC,EAAM,IAAMC,mBAAmBH,EAAIE,IAE5C,OAAOD,EAmBYG,CAAY,2BAAKb,GAAN,IAAcc,OAAQjJ,EAAMa,SAASqI,MAC9DC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,YAAmB,IACjBG,EADgB,EAAfF,SACsBG,QAAQ,GAAGC,UAAU,GAAGC,MAClDxF,KAAI,SAAAyF,GAAC,OAAIA,EAAEC,MAAM,QAAMC,OAAO3F,KAAK,SAAAyF,GAAC,OAAKA,KAC5CzB,EAAY1D,IAAEsF,IAAIC,WAAWC,gBAAgBT,SAIhD,CAACtJ,EAAM6B,SAAST,OAAQpB,EAAMuI,MAAOvI,EAAMyD,aAE9C7B,qBAAU,WACR,GAAKoG,EAAL,CACA,IAAMgC,EAAU,IAAIzF,IAAEN,IAAIgG,QAAQjC,EAAUhI,EAAM4H,OAAQ,CAAEN,UAG5D,OAFAtH,EAAMiE,IAAIiD,UAAU8C,GAEb,kBAAMhK,EAAMiE,IAAIkD,aAAa6C,OACnC,CAAChC,IAEG,MCGMkC,EA7BM,SAACC,GACpB,IAAKA,EAAQC,WAAY,KAAM,yBAyB/B,MAAO,CAvBW,SAAChJ,GACjB,IACMoD,EADW,IAAID,IAAEC,QAAQC,SAAS,CAAEC,OAAQyF,EAAQC,aACjCtJ,mBAEzB,OAAO,IAAIuJ,SAAQ,SAACC,EAASC,GAC3B/F,EAAQgG,eAAe,CACrBC,GAAI,CAACrJ,EAAOiH,IAAKjH,EAAOkH,IAAK,GAAGoC,KAAK,OACpC,SAACxJ,GACFoJ,EAAQpJ,EAAOC,MAAM,GAAGX,QAAQe,UAC/BgJ,OAIe,SAAChJ,GACrB,OAAOoH,MAtCkB,uPAuCtBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAClI,GAGL,OAzCe,SAAC,GAAkB,IAOlC0J,EAPiC,EAAfC,SAOC3G,KAAI,YAAqB,IAN9B4G,EAMYC,EAAiB,EAAjBA,WAC9B,MAAO,CAACA,EAAWC,IAAK,CACtBxJ,OAAQuJ,EAAWC,IACnB9I,eAAgB6I,EAAWE,gBAC3BlJ,cAVgB+I,EAUSC,EAAWE,gBATlCH,EAAQ,IAAY,UACpBA,EAAQ,GAAW,WAChB,MAQL3I,UAAW4I,EAAWG,iBAI1B,OAAOC,OAAOC,YAAYR,GAuBDS,CAAenK,GACZM,SCjCxB8J,EAAe,8CACfC,EAAiB,CAAEjD,IAAK,mBAAoBC,IAAK,oBA+DxCiD,EAxDH,SAACvL,GAAW,IAAD,EACWC,mBAAS,CAAEmB,OAAQkK,IAD9B,mBACdzJ,EADc,KACJ2J,EADI,OAEevL,mBAAS,OAFxB,mBAEdwD,EAFc,KAEFC,EAFE,OAGezD,qBAHf,mBAGdmG,EAHc,KAGFqF,EAHE,OAKcC,EAAc,CAAEtB,WAAYiB,IAL1C,mBAKdM,EALc,KAKHC,EALG,KAOrBhK,qBAAU,WACJiK,UAAUC,aACZD,UAAUC,YAAYC,oBAAmB,SAAC1K,GAbrB,IAACD,EAcpBoK,EAAY,CAAEpK,QAdMA,EAcqBC,EAASD,OAbjD,CAAEiH,IAAKjH,EAAO4K,SAAU1D,IAAKlH,EAAO6K,mBAgBxC,IAEHrK,qBAAU,WACJC,EAAST,QAAU8K,MAAgBrK,EAASN,QAC9CoK,EAAU9J,EAAST,QAAQ+H,MAAK,SAAC5H,GAC/BiK,EAAY,2BAAK3J,GAAN,IAAgBN,eAC1B4K,MAAMxK,QAAQzB,OAEf2B,EAAST,QAAUS,EAASN,QAAU2K,MAAgBrK,EAASC,cACjE8J,EAAc/J,EAASN,QAAQ4H,MAAK,SAACiD,GAC/BA,GAAYZ,EAAY,2BAAK3J,GAAauK,SAGjD,CAACvK,IAEJ,IAAMqK,EAAY,kBAAOhB,OAAOmB,GAAGxK,EAAST,OAAQkK,IAMpD,OACE,qBAAKjJ,UAAU,MAAf,SACE,eAAC,EAAD,CAAK8C,OAAQtD,EAAST,OACpBgE,KAAM8G,IAAc,GAAK,EACzB9F,WAAYA,EACZ9C,QAAS,aACToB,OAAQ2G,EAJV,UAMGa,KAAe,cAAC,EAAD,CAAQrK,SAAUA,IACjCqK,KAAe,cAAC,EAAD,CAAQrK,SAAUA,EAChC+F,OAlDI,KAmDJC,eAAgB4D,IACjBS,KAAe,cAAC,EAAD,CAASrK,SAAUA,EACjC0G,MArDI,KAsDJ9E,WAAYA,IACd,cAAC,EAAD,CAAYhC,SAnBS,SAAC,GAAwB,IAAtBL,EAAqB,EAArBA,OAAQG,EAAa,EAAbA,OACpCiK,EAAY,CAAEpK,SAAQG,YAkBwBM,SAAUA,IACpD,cAAC,EAAD,CAAkBe,SAAUc,UCzDrB4I,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6278f9b0.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Paper, TextField, IconButton } from '@material-ui/core'\nimport Alert from '@material-ui/lab/Alert'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst SearchForm = (props) => {\n  const [error, setError] = useState(null)\n  const [warning, setWarning] = useState(null)\n  const [info, setInfo] = useState(null)\n  const [address, setAddress] = useState('')\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    const service = props.platform.getSearchService()\n    service.geocode({ q: address },\n      (data) => {\n        const result = data.items[0]\n        if (!result) {\n          setError('Nothing found for this input.')\n          return\n        }\n        const coords = result.position\n        const address = result.title\n        const { county, postalCode } = result.address\n        props.onResult({ coords, county, postalCode })\n        setAddress(address)\n      },\n      (...args) => {\n        console.error('GEOCODING ERROR!', args)\n        setError('Something went wrong. Please try again.')\n      }\n    )\n  }\n\n  const handleAddressInput = (evt) => {\n    setError(false)\n    setAddress(evt.target.value)\n  }\n\n  useEffect(() => {\n    setWarning(null)\n    setInfo(null)\n    if (props.location.countyStatus == 'hotSpot') {\n      setWarning(`\n        The county of \"${props.location.county}\" has been declared a \n        COVID-19 hot spot due to a 7 day incident value of \n        ${Math.round(props.location.incidenceValue)} per 100.000 \n        inhabitants. You may not travel further than 15km from your home \n        at this moment. (Last updated: ${props.location.updatedAt})\n      `)\n    } else if (props.location.incidenceValue) {\n      setInfo(`\n        The county of \"${props.location.county}\" has a 7 day incident value of \n        ${Math.round(props.location.incidenceValue)} per 100.000 inhabitants\n        ${props.location.countyStatus == 'riskArea' ? ' and is considered a high risk area.' : '.'} \n        (Last updated: ${props.location.updatedAt})\n      `)\n    }\n  }, [props.location])\n\n  return (\n    <Paper elevation={3} className=\"form\">\n      <form onSubmit={handleSubmit}>\n        <TextField\n          fullWidth\n          label=\"Search for address\"\n          variant=\"outlined\"\n          value={address}\n          onChange={handleAddressInput}\n          onBlur={handleSubmit}\n          error={!!error}\n        />\n      </form>\n      { warning && <Alert severity=\"warning\" \n                          className=\"addendum\"\n                          action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => setWarning(null)}\n                            >\n                              <CloseIcon fontSize=\"inherit\" />\n                            </IconButton>\n                          }\n                        >\n                          {warning}\n                        </Alert>}\n      { (error && !info) && <Alert severity=\"error\"\n                                   className=\"addendum\"\n                                   action={\n                                     <IconButton\n                                       aria-label=\"close\"\n                                       color=\"inherit\"\n                                       size=\"small\"\n                                       onClick={() => setError(null)}\n                                     >\n                                       <CloseIcon fontSize=\"inherit\" />\n                                     </IconButton>\n                                   }\n                                 >\n                                   {error}\n                                 </Alert>}\n      { (info && !warning) && <Alert severity=\"info\"\n                                     className=\"addendum\"\n                                     action={\n                                       <IconButton\n                                         aria-label=\"close\"\n                                         color=\"inherit\"\n                                         size=\"small\"\n                                         onClick={() => setInfo(null)}\n                                       >\n                                         <CloseIcon fontSize=\"inherit\" />\n                                       </IconButton>\n                                     }\n                                   >\n                                     {info}\n                                   </Alert>}\n    </Paper>\n  )\n}\n\nexport default SearchForm","import { useState } from 'react'\nimport DirectionsCarIcon from '@material-ui/icons/DirectionsCar'\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk'\nimport { Paper } from '@material-ui/core'\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab/'\n\nconst TravelModeSelect = (props) => {\n  const [travelMode, setTravelMode] = useState('car')\n\n  const handleChange = (evt, value) => {\n    setTravelMode(value)\n    props.onChange(value)\n  }\n\n  return (\n    <Paper elevation={3} className=\"travel-mode-select\">\n      <ToggleButtonGroup\n        value={travelMode}\n        exclusive\n        onChange={handleChange}\n      >\n        <ToggleButton value=\"car\" >\n          <DirectionsCarIcon />\n        </ToggleButton>\n        <ToggleButton value=\"pedestrian\" >\n          <DirectionsWalkIcon />\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Paper>\n  )\n}\n\nexport default TravelModeSelect","import React, { useRef, useLayoutEffect, useState, useEffect } from 'react'\nimport H from \"@here/maps-api-for-javascript\"\n\nconst Map = (props) => {\n  const mapRef = useRef(null)\n  const [map, setMap] = useState(null)\n  const [platform, setPlatform] = useState(null)\n\n  useLayoutEffect(() => {\n    if (!mapRef.current) return;\n\n    const hPlatform = new H.service.Platform({\n      'apikey': props.apiKey\n    })\n\n    setPlatform(hPlatform)\n\n    const defaultLayers = hPlatform.createDefaultLayers()\n\n    const hMap = new H.Map(\n      mapRef.current,\n      defaultLayers.vector.normal.map,\n      {\n        pixelRatio: window.devicePixelRatio,\n        center: props.center,\n        zoom: props.zoom\n      }\n    )\n\n    const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(hMap))\n    // const ui = H.ui.UI.createDefault(hMap, defaultLayers, 'de-DE')\n\n    setMap(hMap)\n\n    return () => hMap.dispose()\n  }, [mapRef])\n\n  useEffect(() => {\n    if (!map) return\n\n    const onResize = (evt) => {\n      map.getViewPort().resize()\n    }\n\n    const onTap = (evt) => {\n      const coords = map.screenToGeo(\n        evt.currentPointer.viewportX,\n        evt.currentPointer.viewportY\n      )\n      props.onClick(coords)\n    }\n\n    window.addEventListener('resize', onResize)\n    map.addEventListener('tap', onTap)\n\n    return () => {\n      window.removeEventListener('resize', onResize)\n      map.removeEventListener('tap', onTap)\n    }\n  }, [map])\n\n  useEffect(() => {\n    if (!map) return\n    map.setCenter(props.center)\n    if (props.zoomBounds) {\n      map.getViewModel().setLookAtData({ bounds: props.zoomBounds })\n    } else {\n      map.setZoom(props.zoom)\n    }\n  }, [props.center, props.zoom, props.zoomBounds])\n\n\n  const renderChildren = () => {\n    const { children } = props\n    if (!children) return\n\n    return React.Children.map(children, c => {\n      if (!c) return\n      return React.cloneElement(c, { map, platform })\n    })\n  }\n\n  return (\n    <>\n      <div className=\"map\" ref={mapRef} />\n      { map ? renderChildren() : \"Loading…\"}\n    </>\n  )\n\n}\n\nexport default Map","import { useEffect } from \"react\"\nimport H from \"@here/maps-api-for-javascript\"\n\nconst Marker = (props) => {\n\n  useEffect(() => {\n    const marker = new H.map.Marker(props.location.coords)\n    props.map.addObject(marker)\n\n    return () => props.map.removeObject(marker)\n\n  }, [props.location.coords])\n\n  return null\n}\n\nexport default Marker","import { useEffect, useState } from \"react\"\nimport H from \"@here/maps-api-for-javascript\"\n\nconst Circle = (props) => {\n  const [color, setColor] = useState('#00BEEC')\n\n  // red: #FF443F 250,68,63\n  // green: #FF443F 5,200,36\n  // blue: #00BEEC 0,190,236\n\n  useEffect(() => {\n    setColor(props.location.countyStatus == 'hotSpot' ? '#FF443F' : '#00BEEC')\n  }, [props.location.countyStatus])\n\n  useEffect(() => {\n    const style = {\n      fillColor: 'rgba(255, 255, 255, 0)',\n      strokeColor: color, \n      lineDash: [3, 3],\n      lineWidth: 3\n    }\n\n    const circle = new H.map.Circle(props.location.coords, props.radius, { style })\n    props.map.addObject(circle)\n    props.onBoundsChange(circle.getBoundingBox())\n\n    return () => props.map.removeObject(circle)\n\n  }, [props.location, color])\n\n  return null\n}\n\nexport default Circle","import { useEffect, useState } from \"react\"\nimport H from \"@here/maps-api-for-javascript\"\n\nconst API_PATH = \"https://isoline.route.ls.hereapi.com/routing/7.2/calculateisoline.json?\"\n\nconst objToParams = (obj) => {\n  let str = \"\";\n  for (let key in obj) {\n    if (str != \"\") str += \"&\";\n    str += key + \"=\" + encodeURIComponent(obj[key])\n  }\n  return str\n}\n\nconst Isoline = (props) => {\n  const [polyline, setPolyline] = useState(null)\n\n  const style = {\n    lineWidth: 0\n  }\n\n  useEffect(() => {\n    const router = props.platform.getRoutingService(null, 8)\n    const params = {\n      start: `geo!${props.location.coords.lat},${props.location.coords.lng}`,\n      range: props.range,\n      rangetype: props.rangeType || 'distance',\n      mode: `shortest;${props.travelMode}`\n    }\n\n    fetch(API_PATH + objToParams({ ...params, apikey: props.platform.a}))\n      .then(response => response.json())\n      .then(({ response }) => {\n        const latLngArray = response.isoline[0].component[0].shape\n          .map(e => e.split(',')).flat().map((e => +e))\n        setPolyline(H.geo.LineString.fromLatLngArray(latLngArray))\n      })\n\n\n  }, [props.location.coords, props.range, props.travelMode])\n\n  useEffect(() => {\n    if (!polyline) return\n    const polygon = new H.map.Polygon(polyline, props.radius, { style })\n    props.map.addObject(polygon)\n\n    return () => props.map.removeObject(polygon)\n  }, [polyline])\n\n  return null\n}\n\nexport default Isoline","import H from \"@here/maps-api-for-javascript\"\n\nconst COUNTY_INFO_ENDPOINT = 'https://services7.arcgis.com/mOBPykOjAyBO2ZKk/arcgis/rest/services/RKI_Landkreisdaten/FeatureServer/0/query?where=1%3D1&outFields=GEN,cases_per_population,county,last_update,cases7_per_100k,cases_per_100k&returnGeometry=false&outSR=4326&f=json'\n\nconst prepCountyData = ({ features }) => {\n  const calcStatus = (count) => {\n    if (count > 200) return 'hotSpot'\n    if (count > 50) return 'riskArea'\n    return 'ok'\n  }\n\n  const entries = features.map(({ attributes }) => {\n    return [attributes.GEN, {\n      county: attributes.GEN,\n      incidenceValue: attributes.cases7_per_100k,\n      countyStatus: calcStatus(attributes.cases7_per_100k),\n      updatedAt: attributes.last_update\n    }]\n  })\n\n  return Object.fromEntries(entries)\n}\n\nconst CountyHelper = (options) => {\n  if (!options.hereAPIKey) throw 'HERE API Key required.'\n\n  const getCounty = (coords) => {\n    const platform = new H.service.Platform({ apiKey: options.hereAPIKey })\n    const service = platform.getSearchService()\n\n    return new Promise((resolve, reject) => {\n      service.reverseGeocode({\n        at: [coords.lat, coords.lng, 0].join(',')\n      }, (result) => { \n        resolve(result.items[0].address.county)\n      }, reject)\n    })\n  }\n\n  const getCountyInfo = (county) => {\n    return fetch(COUNTY_INFO_ENDPOINT)\n      .then(response => response.json())\n      .then((data) => {\n        const countyData = prepCountyData(data)\n        let info = countyData[county]\n        return info\n      })\n  }\n\n  return [getCounty, getCountyInfo]\n}\n\nexport default CountyHelper","import { useState, useEffect } from 'react'\n\nimport SearchForm from './components/SearchForm'\nimport TravelModeSelect from './components/TravelModeSelect'\nimport Map from './components/Map'\nimport Marker from './components/Marker'\nimport Circle from './components/Circle'\nimport Isoline from './components/Isoline'\n\nimport CountyHelpers from './lib/countyHelpers.js'\n\nconst HERE_API_KEY = 'mPpQR16YV3tZ3YpokLwD4hFCEpwCKJWXe9Q-wv4EXIU'\nconst DEFAULT_COORDS = { lat: 51.354050638053394, lng: 10.688718943513482 } // Germany\nconst RANGE = 15 * 1000 // 15km\n\nconst coordsToHERECoords = (coords) => {\n  return { lat: coords.latitude, lng: coords.longitude }\n}\n\nconst App = (props) => {\n  const [location, setLocation] = useState({ coords: DEFAULT_COORDS })\n  const [travelMode, setTravelMode] = useState('car')\n  const [zoomBounds, setZoomBounds] = useState()\n\n  const [getCounty, getCountyInfo] = CountyHelpers({ hereAPIKey: HERE_API_KEY })\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setLocation({ coords: coordsToHERECoords(position.coords) })\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    if (location.coords && coordsSet() && !location.county) {\n      getCounty(location.coords).then((county) => {\n        setLocation({ ...location, county })\n      }).catch(console.error)\n    }\n    if (location.coords && location.county && coordsSet() && !location.countyStatus) {\n      getCountyInfo(location.county).then((countyInfo) => {\n        if (countyInfo) setLocation({ ...location, ...countyInfo })\n      })\n    }\n  }, [location])\n\n  const coordsSet = () => !Object.is(location.coords, DEFAULT_COORDS)\n\n  const handleSearchResult = ({ coords, county }) => {\n    setLocation({ coords, county })\n  }\n\n  return (\n    <div className=\"App\">\n      <Map center={location.coords}\n        zoom={coordsSet() ? 12 : 8}\n        zoomBounds={zoomBounds}\n        onClick={() => { }}\n        apiKey={HERE_API_KEY}\n      >\n        {coordsSet() && <Marker location={location} />}\n        {coordsSet() && <Circle location={location}\n          radius={RANGE}\n          onBoundsChange={setZoomBounds} />}\n        {coordsSet() && <Isoline location={location}\n          range={RANGE}\n          travelMode={travelMode} />}\n        <SearchForm onResult={handleSearchResult} location={location} />\n        <TravelModeSelect onChange={setTravelMode} />\n      </Map>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}